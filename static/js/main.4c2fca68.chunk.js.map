{"version":3,"sources":["components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/todosFilter/TodosFilter.js","components/footer/Footer.js","App.js","index.js"],"names":["TodoItem","props","todo","removeTodo","onCompleted","react_default","a","createElement","className","completed","type","id","onChange","checked","htmlFor","title","onClick","TodoList","todoList","changeCompleted","selectedPage","markAllAsComplete","filteredList","Object","toConsumableArray","filter","style","display","map","todoItem_TodoItem","key","TodosFilter","_ref","todosFilter","href","Footer","clearCompleted","length","todosFilter_TodosFilter","some","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","target","value","addTodo","newItem","state","preventDefault","prevState","_objectSpread","concat","allTodos","todoId","newTodoList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","removedItem","indexOf","splice","err","return","page","innerText","every","item","_this$state","placeholder","onKeyDown","todoList_TodoList","footer_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4c2fca68.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  const { todo, removeTodo, onCompleted } = props;\n\n  return (\n    <li className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onChange={onCompleted}\n          checked={todo.completed}\n        />\n        <label\n          htmlFor={todo.id}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoItem/TodoItem';\n\nfunction TodoList(props) {\n  const {\n    todoList,\n    removeTodo,\n    changeCompleted,\n    selectedPage,\n    markAllAsComplete,\n  } = props;\n  let filteredList = [];\n\n  switch (selectedPage) {\n    case 'All':\n      filteredList = [...todoList];\n      break;\n    case 'Active':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === false\n      ));\n      break;\n    case 'Completed':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === true\n      ));\n      break;\n    default:\n  }\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        onClick={markAllAsComplete}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {filteredList.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            removeTodo={removeTodo}\n            onCompleted={changeCompleted}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  markAllAsComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodosFilter({ todosFilter, selectedPage }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        {selectedPage === 'All'\n          ? (<a onClick={todosFilter} href=\"#/\" className=\"selected\">\n              All\n            </a>)\n          : (<a onClick={todosFilter} href=\"#/\">\n              All\n            </a>)\n        }\n      </li>\n\n      <li>\n        {selectedPage === 'Active'\n          ? (<a onClick={todosFilter} href=\"#/active\" className=\"selected\">\n              Active\n            </a>)\n          : (<a onClick={todosFilter} href=\"#/active\">\n              Active\n            </a>)\n        }\n      </li>\n\n      <li>\n        {selectedPage === 'Completed'\n          ? (<a onClick={todosFilter} href=\"#/completed\" className=\"selected\">\n              Completed\n            </a>)\n          : (<a onClick={todosFilter} href=\"#/completed\">\n              Completed\n            </a>)\n        }\n      </li>\n    </ul>\n  );\n}\n\nTodosFilter.propTypes = {\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodosFilter from '../todosFilter/TodosFilter';\nimport PropTypes from 'prop-types';\n\nfunction Footer(\n  {\n    todoList,\n    todosFilter,\n    selectedPage,\n    clearCompleted\n  }\n) {\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {todoList.filter(todo => (\n          !todo.completed\n        )).length}\n      </span>\n      <span className=\"todo-count\">items left</span>\n\n      <TodosFilter\n        todosFilter={todosFilter}\n        selectedPage={selectedPage}\n      />\n\n      {todoList.some(todo => todo.completed)\n        ? <button\n            type=\"button\"\n            onClick={clearCompleted}\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          >\n            Clear completed\n          </button>\n        : <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'none' }}\n          >\n            Clear completed\n          </button>\n      }\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/todoList/TodoList';\nimport Footer from './components/footer/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      id: 1,\n      title: '',\n      selectedPage: 'All',\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  addTodo = (event) => {\n    const newItem = {\n      id: this.state.id,\n      title: this.state.title,\n      completed: false,\n    };\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.target.value = '';\n\n      this.setState(prevState => ({\n        ...prevState,\n        todoList: [...prevState.todoList, newItem],\n        id: prevState.id + 1,\n        title: '',\n        allTodos: this.state.todoList,\n    }))};\n  }\n\n  removeTodo = (todoId) => {\n    const newTodoList = [...this.state.todoList];\n\n    for (const todo of newTodoList) {\n      if (todo.id === todoId) {\n        const removedItem = newTodoList.indexOf(todo);\n        newTodoList.splice(removedItem, 1);\n      }\n    };\n\n    this.setState({\n      todoList: newTodoList,\n    });\n  }\n\n  changeCompleted = (event) => {\n    const todoId = +event.target.id;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (todoId === todo.id) {\n          return {\n            ...todo, completed: !todo.completed\n          };\n        }\n\n        return todo;\n      })\n    }));\n  }\n\n  todosFilter = (event) => {\n    let page = event.target.innerText;\n\n    this.setState({\n      selectedPage: page,\n    });\n  }\n\n  markAllAsComplete = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (prevState.todoList.every(item => item.completed)) {\n          return {...todo, completed: false}\n        }\n\n        return {...todo, completed: true}\n      })\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.filter(todo => !todo.completed)\n    }));\n  }\n\n  render() {\n    const { todoList, selectedPage } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown={this.addTodo}\n            onChange={this.onInputChange}\n          />\n        </header>\n\n        <TodoList\n          todoList={todoList}\n          removeTodo={this.removeTodo}\n          changeCompleted={this.changeCompleted}\n          selectedPage={selectedPage}\n          markAllAsComplete={this.markAllAsComplete}\n        />\n\n        <Footer\n          todoList={todoList}\n          selectedPage={selectedPage}\n          todosFilter={this.todosFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}