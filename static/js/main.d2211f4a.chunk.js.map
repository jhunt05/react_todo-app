{"version":3,"sources":["components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/todosFilter/TodosFilter.js","components/footer/Footer.js","App.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeEditMode","setState","isInEditMode","state","onValueChange","event","value","target","changeTodoTitle","id","trim","removeTodo","editTodo","title","_this$props","todo","onCompleted","react_default","a","createElement","className","completed","type","onChange","checked","onSubmit","onBlur","onDoubleClick","onClick","React","Component","TodoList","todoList","changeCompleted","selectedPage","markAllAsComplete","filteredList","toConsumableArray","filter","htmlFor","map","todoItem_TodoItem","key","TodosFilter","_ref","todosFilter","href","Footer","clearCompleted","length","todosFilter_TodosFilter","some","style","display","App","onInputChange","addTodo","preventDefault","newItem","prevState","_objectSpread","concat","todoId","page","innerText","every","item","_this$state","placeholder","todoList_TodoList","footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2211f4a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.title,\n      isInEditMode: false,\n    }\n  }\n\n  changeEditMode = () => {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode,\n    })\n  }\n\n  onValueChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    })\n  }\n\n  changeTodoTitle = () => {\n    const { value } = this.state;\n    const { id } = this.props;\n\n    if (value.trim() === '') {\n      return this.props.removeTodo(id);\n    }\n\n    this.props.editTodo(value, id)\n\n    this.setState({\n      isInEditMode: false,\n    })\n  }\n\n  render() {\n    const { todo, removeTodo, onCompleted } = this.props;\n\n    return (\n      <li className={todo.completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={onCompleted}\n            checked={todo.completed}\n          />\n\n          {!this.state.isInEditMode\n            ? <label className=\"label\"\n                onDoubleClick={this.changeEditMode}\n              >\n                {todo.title}\n              </label>\n            : <form onSubmit={this.changeTodoTitle}>\n                <input\n                  onBlur={this.changeTodoTitle}\n                  type=\"text\"\n                  className=\"edit\"\n                  onChange={this.onValueChange}\n                  value={this.state.value}\n                />\n              </form>\n          }\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoItem/TodoItem';\n\nfunction TodoList(props) {\n  const {\n    todoList,\n    removeTodo,\n    changeCompleted,\n    selectedPage,\n    markAllAsComplete,\n    editTodo\n  } = props;\n  let filteredList = [];\n\n  switch (selectedPage) {\n    case 'All':\n      filteredList = [...todoList];\n      break;\n    case 'Active':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === false\n      ));\n      break;\n    case 'Completed':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === true\n      ));\n      break;\n    default:\n  }\n\n  return (\n    <section className=\"main\">\n      <input\n        onClick={markAllAsComplete}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {filteredList.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            removeTodo={removeTodo}\n            onCompleted={changeCompleted}\n            editTodo={editTodo}\n            title={todo.title}\n            id={todo.id}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  markAllAsComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodosFilter({ todosFilter, selectedPage }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/\"\n          className={selectedPage === 'All' ? 'selected' : ''}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/active\"\n          className={selectedPage === 'Active' ? 'selected' : ''}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/completed\"\n          className={selectedPage === 'Completed' ? 'selected' : ''}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nTodosFilter.propTypes = {\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodosFilter from '../todosFilter/TodosFilter';\nimport PropTypes from 'prop-types';\n\nfunction Footer(\n  {\n    todoList,\n    todosFilter,\n    selectedPage,\n    clearCompleted\n  }\n) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {todoList.filter(todo => (\n          !todo.completed\n        )).length}\n      </span>\n      <span className=\"todo-count\">items left</span>\n\n      <TodosFilter\n        todosFilter={todosFilter}\n        selectedPage={selectedPage}\n      />\n\n      {todoList.some(todo => todo.completed) &&\n        (\n          <button\n            type=\"button\"\n            onClick={clearCompleted}\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          >\n            Clear completed\n          </button>\n        )\n      }\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/todoList/TodoList';\nimport Footer from './components/footer/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      id: 1,\n      title: '',\n      selectedPage: 'All',\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n\n    if (this.state.title.trim() === '') {\n      return;\n    }\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.title,\n      completed: false,\n    };\n\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: [...prevState.todoList, newItem],\n      id: prevState.id + 1,\n      title: '',\n    }));\n  }\n\n  removeTodo = (todoId) => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: [...prevState.todoList].filter(todo => (\n        todo.id !== todoId\n      )),\n    }));\n  }\n\n  changeCompleted = (event) => {\n    const todoId = +event.target.id;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (todoId === todo.id) {\n          return {\n            ...todo, completed: !todo.completed\n          };\n        }\n\n        return todo;\n      })\n    }));\n  }\n\n  todosFilter = (event) => {\n    const page = event.target.innerText;\n\n    this.setState({\n      selectedPage: page,\n    });\n  }\n\n  markAllAsComplete = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (prevState.todoList.every(item => item.completed)) {\n          return {...todo, completed: false}\n        }\n\n        return {...todo, completed: true}\n      })\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.filter(todo => !todo.completed)\n    }));\n  }\n\n  editTodo = (value, id) => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (todo.id === id) {\n          return {...todo, title: value}\n        }\n\n        return todo;\n      })\n    }))\n  }\n\n  render() {\n    const { todoList, selectedPage } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={this.addTodo}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.onInputChange}\n              value={this.state.title}\n            />\n          </form>\n        </header>\n\n        <TodoList\n          todoList={todoList}\n          removeTodo={this.removeTodo}\n          changeCompleted={this.changeCompleted}\n          selectedPage={selectedPage}\n          markAllAsComplete={this.markAllAsComplete}\n          editTodo={this.editTodo}\n        />\n\n        <Footer\n          todoList={todoList}\n          selectedPage={selectedPage}\n          todosFilter={this.todosFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}