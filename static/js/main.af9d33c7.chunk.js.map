{"version":3,"sources":["components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/todosFilter/TodosFilter.js","components/footer/Footer.js","App.js","index.js"],"names":["TodoItem","props","todo","removeTodo","onCompleted","react_default","a","createElement","className","completed","type","id","onChange","checked","title","onClick","TodoList","todoList","changeCompleted","selectedPage","markAllAsComplete","onInputChange","changeEditMode","editTodo","filteredList","Object","toConsumableArray","filter","htmlFor","map","todoItem_TodoItem","key","TodosFilter","_ref","todosFilter","href","Footer","clearCompleted","length","todosFilter_TodosFilter","some","style","display","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","value","addTodo","preventDefault","newItem","state","trim","prevState","_objectSpread","concat","clearInputField","todoId","page","innerText","every","item","_this$state","onSubmit","placeholder","onKeyDown","todoList_TodoList","footer_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af9d33c7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  const { todo, removeTodo, onCompleted } = props;\n\n  return (\n    <li className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onChange={onCompleted}\n          checked={todo.completed}\n        />\n\n        <label>{todo.title}</label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoItem/TodoItem';\n\nfunction TodoList(props) {\n  const {\n    todoList,\n    removeTodo,\n    changeCompleted,\n    selectedPage,\n    markAllAsComplete,\n    onInputChange,\n    changeEditMode,\n    editTodo\n  } = props;\n  let filteredList = [];\n\n  switch (selectedPage) {\n    case 'All':\n      filteredList = [...todoList];\n      break;\n    case 'Active':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === false\n      ));\n      break;\n    case 'Completed':\n      filteredList = [...todoList].filter(todo => (\n        todo.completed === true\n      ));\n      break;\n    default:\n  }\n\n  return (\n    <section className=\"main\">\n      <input\n        onClick={markAllAsComplete}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {filteredList.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            removeTodo={removeTodo}\n            onCompleted={changeCompleted}\n            onInputChange={onInputChange}\n            changeEditMode={changeEditMode}\n            editTodo={editTodo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  markAllAsComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodosFilter({ todosFilter, selectedPage }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/\"\n          className={selectedPage === 'All' ? 'selected' : ''}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/active\"\n          className={selectedPage === 'Active' ? 'selected' : ''}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={todosFilter}\n          href=\"#/completed\"\n          className={selectedPage === 'Completed' ? 'selected' : ''}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nTodosFilter.propTypes = {\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodosFilter from '../todosFilter/TodosFilter';\nimport PropTypes from 'prop-types';\n\nfunction Footer(\n  {\n    todoList,\n    todosFilter,\n    selectedPage,\n    clearCompleted\n  }\n) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {todoList.filter(todo => (\n          !todo.completed\n        )).length}\n      </span>\n      <span className=\"todo-count\">items left</span>\n\n      <TodosFilter\n        todosFilter={todosFilter}\n        selectedPage={selectedPage}\n      />\n\n      {todoList.some(todo => todo.completed) &&\n        (\n          <button\n            type=\"button\"\n            onClick={clearCompleted}\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          >\n            Clear completed\n          </button>\n        )\n      }\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  todoList: PropTypes.object.isRequired,\n  todosFilter: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/todoList/TodoList';\nimport Footer from './components/footer/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      id: 1,\n      title: '',\n      selectedPage: 'All',\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.title,\n      completed: false,\n    };\n\n    if (this.state.title.trim() !== '') {\n      this.setState(prevState => ({\n        ...prevState,\n        todoList: [...prevState.todoList, newItem],\n        id: prevState.id + 1,\n        title: '',\n    }))};\n  }\n\n  clearInputField = (event) => {\n    if (event.key === \"Enter\") {\n      event.target.value = '';\n    }\n  }\n\n  removeTodo = (todoId) => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: [...prevState.todoList].filter(todo => (\n        todo.id !== todoId\n      )),\n    }));\n  }\n\n  changeCompleted = (event) => {\n    const todoId = +event.target.id;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (todoId === todo.id) {\n          return {\n            ...todo, completed: !todo.completed\n          };\n        }\n\n        return todo;\n      })\n    }));\n  }\n\n  todosFilter = (event) => {\n    const page = event.target.innerText;\n\n    this.setState({\n      selectedPage: page,\n    });\n  }\n\n  markAllAsComplete = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.map(todo => {\n        if (prevState.todoList.every(item => item.completed)) {\n          return {...todo, completed: false}\n        }\n\n        return {...todo, completed: true}\n      })\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todoList: prevState.todoList.filter(todo => !todo.completed)\n    }));\n  }\n\n  render() {\n    const { todoList, selectedPage } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={this.addTodo}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.onInputChange}\n              onKeyDown={this.clearInputField}\n            />\n          </form>\n        </header>\n\n        <TodoList\n          todoList={todoList}\n          removeTodo={this.removeTodo}\n          changeCompleted={this.changeCompleted}\n          selectedPage={selectedPage}\n          markAllAsComplete={this.markAllAsComplete}\n        />\n\n        <Footer\n          todoList={todoList}\n          selectedPage={selectedPage}\n          todosFilter={this.todosFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}